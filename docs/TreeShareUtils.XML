<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TreeShareUtils</name>
    </assembly>
    <members>
        <member name="T:TreeShare.Utils.ConsoleManager">
            <summary>
            Utility class used to manage the console.
            </summary>
        </member>
        <member name="M:TreeShare.Utils.ConsoleManager.GetConsoleWindow">
            <summary>
            Used to manipulate the console window.
            </summary>
            <returns>Window handle.</returns>
        </member>
        <member name="M:TreeShare.Utils.ConsoleManager.ShowWindow(System.IntPtr,System.Int32)">
            <summary>
            Used to manipulate visibility of the console window.
            </summary>
            <param name="hWnd">Handle of the window.</param>
            <param name="nCmdShow">New status of the window.</param>
            <returns>True if successful, false otherwise.</returns>
        </member>
        <member name="M:TreeShare.Utils.ConsoleManager.ShowConsole">
            <summary>
            Shows the console window.
            </summary>
        </member>
        <member name="M:TreeShare.Utils.ConsoleManager.HideConsole">
            <summary>
            Hides the console window. 
            </summary>
        </member>
        <member name="M:TreeShare.Utils.ConsoleManager.HideSleepShow(System.Int32)">
            <summary>
            Hides the console window for a given
            amount of time (returns once the
            window is visible again).
            </summary>
            <param name="ms">Time (in miliseconds) to hide for.</param>
        </member>
        <member name="M:TreeShare.Utils.ConsoleManager.GetPassword">
            <summary>
            Gets a password from the console, using stars
            to hide the input.
            </summary>
            <returns>User's password.</returns>
        </member>
        <member name="T:TreeShare.Utils.FileHelper">
            <summary>
            Utility class that handles file manipulation.
            </summary>
        </member>
        <member name="M:TreeShare.Utils.FileHelper.Move(System.String,System.String)">
            <summary>
            Moves a file, overwriting any other file standing
            in the way.
            </summary>
            <param name="tmp">Original path to the file being moved.</param>
            <param name="real">Target path of the file beind moved.</param>
        </member>
        <member name="M:TreeShare.Utils.FileHelper.Delete(System.String)">
            <summary>
            Deletes a file if it exists.
            </summary>
            <param name="file">Path to the file.</param>
        </member>
        <member name="M:TreeShare.Utils.FileHelper.Create(System.String)">
            <summary>
            Creates a new file (and any missing directory
            in its path) and returns its time of creation.
            </summary>
            <param name="file">Path to the file.</param>
            <returns>Time of creation or DataTime.MaxValue if creation didn't take place.</returns>
        </member>
        <member name="M:TreeShare.Utils.FileHelper.FileInUse(System.String)">
            <summary>
            Checks if a file is being used by another process (or
            another thread within this process).
            </summary>
            <param name="file">Path to the file.</param>
            <returns>True if the files is used, false otherwise.</returns>
        </member>
        <member name="T:TreeShare.Utils.Hasher">
            <summary>
            Utility class used to hash passwords.
            </summary>
        </member>
        <member name="M:TreeShare.Utils.Hasher.CreatePasswordHash(System.String)">
            <summary>
            Generates a hash for a password represented as a
            string.
            </summary>
            <param name="pass">Password to hash.</param>
            <returns>Hash of the password.</returns>
        </member>
        <member name="M:TreeShare.Utils.Hasher.CreatePasswordHash(System.Security.SecureString)">
            <summary>
            Generates a hash for a password represented as a
            SecureString.
            Note: No safe method found so far (all found
            require unsafe code), so it's does not offer
            any protection.
            </summary>
            <param name="pass">Password to hash.</param>
            <returns>Hash of the password.</returns>
        </member>
    </members>
</doc>
